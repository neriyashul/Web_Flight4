 @{
        ViewBag.Title = "loadAndDisplay";
    }

    <div>
        <img src="/photoes/export-map-share.png" alt="map" style="width:100%;height:100%" />
        <DIV id="positionDiv" style="position:absolute; top:0px; width:100%; height:100%">
            <canvas id="myCanvas"></canvas>
        </DIV>
    </div>


    <script>
        function createLine(canvasID, startX, startY, endX, endY, width = 3, color = "blue") {
            var myCanvas = document.getElementById(canvasID);
            if (myCanvas && myCanvas.getContext("2d")) {
                var context = myCanvas.getContext("2d");
                context.beginPath();
                context.moveTo(startX, startY);
                context.lineTo(endX, endY);

                context.strokeStyle = color;
                context.lineWidth = width;
                context.stroke();
            }
        }</script>


    <script>
        <script>
        var myCanvas = document.getElementById("myCanvas");
        var myImg = document.getElementById("imgID");
        myCanvas.width = myImg.width;
        myCanvas.height = myImg.he;
    </script>
    <script>
        var time = @Session["time"] * 1000;
        var newX= Number;
        var newY= Number;

        createLineWithTime = (function () {
            $.post("@Url.Action("GetCourse")").done(function (xml) {
                if (xml === "") {
                    alert("done");
                    clearInterval(refreshIntervalId);
                }
                var xmlDoc = $.parseXML(xml),
                $xml = $(xmlDoc),
                rudder = $xml.find("rudder").text();
                throttle = $xml.find("throttle").text();
                fRudder = parseFloat(rudder);
                fThrottle = parseFloat(throttle);
                

                var curX = newX;
                var curY = newY;
                var addToX = 1 - Math.abs(fRudder);
                var addToY = -1 * fRudder;
                newX = curX + (addToX * (time/10) * fThrottle);
                newY = (curX + (addToY * (time / 10) * fThrottle));

                newX = Math.max(0, newX);
                newY = Math.max(0, newY);
                newX = Math.min(myCanvas.width, newX);
                newY = Math.min(myCanvas.height, newY);

                createLine("myCanvas", curX, curY, newX, newY, 2, "red");
                        
            });
        });

        newX = @Session["lon"];
        newY = @Session["lat"];
        var refreshIntervalId = setInterval(createLineWithTime, time);
        createLineWithTime();

        /*} catch (error) {
            console.error(error);
            print("there was a problem");
        }*/
    </script>
